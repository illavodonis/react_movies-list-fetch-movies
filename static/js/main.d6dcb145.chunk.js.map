{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","res","json","FindMovie","addMovie","useState","setMovie","query","setQuery","haserror","setError","findMovieHandler","event","preventDefault","htmlFor","type","id","placeholder","classNames","onChange","ev","target","value","onClick","disabled","length","App","setMovies","film","prevMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6dcb145.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../react-app-env';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Movie } from './react-app-env';\n\nconst BASE_URL = 'http://www.omdbapi.com/?apikey=a56ca071&t=';\n\nexport const getMovie = async (title: string):Promise<Movie> => {\n  const res = await fetch(`${BASE_URL}${title}`);\n\n  return res.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\nimport { getMovie } from '../../api';\n\ninterface Props {\n  addMovie: (film: Movie) => void;\n}\nexport const FindMovie: React.FC <Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [haserror, setError] = useState(false);\n\n  const findMovieHandler = async (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n    const res = await getMovie(query);\n\n    if (!res.imdbID) {\n      setError(true);\n      setMovie(null);\n    }\n\n    if (res.imdbID) {\n      setMovie(res);\n      setError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': haserror })}\n              onChange={(ev) => {\n                setQuery(ev.target.value);\n                if (ev.target.value === '') {\n                  setError(false);\n                }\n              }}\n              value={query}\n            />\n          </div>\n\n          {haserror && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovieHandler}\n              disabled={!query.length}\n\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie?.imdbID}\n              onClick={() => {\n                if (movie) {\n                  addMovie(movie);\n                  setError(false);\n                  setMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './react-app-env';\n\nexport const App: FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (film: Movie) => {\n    setMovies((prevMovies) => {\n      if (prevMovies.some(movie => movie.imdbID === film.imdbID)) {\n        return prevMovies;\n      }\n\n      return [...prevMovies, film];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}